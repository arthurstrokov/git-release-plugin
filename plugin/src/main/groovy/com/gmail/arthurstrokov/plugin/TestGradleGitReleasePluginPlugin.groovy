/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.gmail.arthurstrokov.plugin

import com.gmail.arthurstrokov.plugin.tasks.CommitLogStatus
import com.gmail.arthurstrokov.plugin.tasks.CreateMajorRelease
import com.gmail.arthurstrokov.plugin.tasks.CreateMinorRelease
import com.gmail.arthurstrokov.plugin.tasks.GitStatus
import com.gmail.arthurstrokov.plugin.utils.GitUtil
import org.gradle.api.Plugin
import org.gradle.api.Project

class TestGradleGitReleasePluginPlugin implements Plugin<Project> {
    void apply(Project project) {
        // Register a task
        project.tasks.register("testGradleGitReleasePlugin") {
            doLast {
                println("Hello from plugin 'com.gmail.arthurstrokov.plugin.testGradleGitReleasePlugin'")
            }
        }
        project.tasks.register("checkGitStatus", GitStatus) {
            setGroup("task git test")
        }
        project.tasks.register("checkCurrentTagVersion") {
            setGroup("task git test")
            dependsOn("checkGitStatus")
            GitUtil.currentTagVersion
        }
        project.tasks.register("checkCommitLogStatus", CommitLogStatus) {
            setGroup("task git test")
            dependsOn("checkGitStatus")
        }
        project.tasks.register("updateMajorReleaseTag", CreateMajorRelease) {
            setGroup("task git test")
            dependsOn("checkGitStatus")
            dependsOn("checkCommitLogStatus")
        }
        project.tasks.register("updateMinorReleaseTag", CreateMinorRelease) {
            setGroup("task git test")
            dependsOn("checkGitStatus")
            dependsOn("checkCommitLogStatus")
        }
        project.tasks.register("updateReleaseTag") {
            setGroup("task git update release tag")
            def currentBrunch = GitUtil.currentBranch
            if (currentBrunch.contains(GitUtil.MAJOR_BRANCH)) {
                dependsOn("updateMajorReleaseTag")
            } else {
                dependsOn("updateMinorReleaseTag")
            }
        }
    }
}
